extend type Book implements Product @key(fields: "isbn") {
  isbn: String! @external
  similarBooks: [Book] @external
  reviews: [Review]
  reviewList(first: Int = 5, after: Int = 0): ReviewConnection

  """
  relatedReviews for a book use the knowledge of `similarBooks` from the books
  service to return related reviews that may be of interest to the user
  """
  relatedReviews(first: Int = 5, after: Int = 0): ReviewConnection
    @requires(fields: "similarBooks { isbn }")
}

extend type Furniture implements Product @key(fields: "upc") {
  upc: String! @external
  reviews: [Review]
  reviewList(first: Int = 5, after: Int = 0): ReviewConnection
}

type PageInfo {
  hasNextPage: Boolean
  hasPreviousPage: Boolean
}

extend interface Product2 {
  """
  A simple list of all reviews for a product
  """
  reviews: [Review]
    @deprecated(
      reason: "The `reviews` field on product is deprecated to roll over the return\ntype from a simple list to a paginated list. The easiest way to fix your\noperations is to alias the new field `reviewList` to `review`:\n\n  {\n    ... on Product {\n      reviews: reviewList {\n        edges {\n          review {\n            body\n          }\n        }\n      }\n    }\n  }\n\nOnce all clients have updated, we will roll over this field and deprecate\n`reviewList` in favor of the field name `reviews` again"
    )

  """
  A paginated list of reviews. This field naming is temporary while all clients
  migrate off of the un-paginated version of this field call reviews. To ease this migration,
  alias your usage of `reviewList` to `reviews` so that after the roll over is finished, you
  can remove the alias and use the final field name:

    {
      ... on Product {
        reviews: reviewList {
          edges {
            review {
              body
            }
          }
        }
      }
    }
  """
  reviewList(first: Int = 5, after: Int = 0): ReviewConnection
}

"""
A review is any feedback about products across the graph
"""
type Review @key(fields: "id") {
  id: ID!

  """
  The plain text version of the review
  """
  body: String

  """
  The user who authored the review
  """
  author: User @provides(fields: "username")

  """
  The product which this review is about
  """
  product: Product
}

"""
A connection wrapper for lists of reviews
"""
type ReviewConnection {
  """
  Helpful metadata about the connection
  """
  pageInfo: PageInfo

  """
  List of reviews returned by the search
  """
  edges: [ReviewEdge]
}

"""
A connection edge for the Review type
"""
type ReviewEdge {
  review: Review
}

extend type User @key(fields: "id") {
  id: ID! @external
  username: String @external

  """
  A list of all reviews by the user
  """
  reviews: [Review]
}
